<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HLGTjIlKggvR90JT2jpjdHatz//Z
</value>
  </data>
</root>